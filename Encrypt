setBool("Auto Reconnect",false)
setBool("Show Punch Hand",false)
setBool("Show Place Hand",false)

for i, bot in pairs(getBots()) do
    if getBot().name:upper() == bot.name:upper() then
        indexbot = i
    end
end

worlds = {}
infoid = {}
local identity = {}
identity.dropitems = 1
identity.takeitems = 1
strings = ""
index = 1
local tileDrop = 0
dropX = posX - 1
dropY = posY - 1

for i =  1,worldperbot do
    table.insert(worlds,worldcollect[math.floor((indexbot - 1) * worldperbot + i)])
end

identity.splitt = function(str, ptr)
    if not ptr then 
        ptr = "%s"
    end
    local tbl = {}
    for string in string.gmatch(str, ptr) do
        table.insert(tbl, string) 
    end
    return tbl
end

identity.botstatus = function()
    strings = ""
    for _, bot in pairs(getBots()) do
        if short then
            strings = strings.."\n"..""..(string.sub(bot.name,1,3)).." | ||"..(string.sub(bot.world,1,3)).."|| | "..(string.upper(bot.status,1,2)).."" 
        else
            strings = strings.."\n"..""..(string.upper(bot.name)).." | ||"..(string.upper(bot.world)).."|| | "..(string.upper(bot.status)).."" 
        end
    end
    return strings
end

identity.takename = function()
    strings = ""
	for i = 1, #storagetake do
        if short then
            strings = strings.."\n||"..(string.sub(storagetake[i],1,3)).."|| "..(infoid[storagetake[i]] or "?")..""
        else
            strings = strings.."\n||"..(string.upper(storagetake[i])).."|| "..(infoid[storagetake[i]] or "?")..""
        end
    end
    return strings
end

identity.dropname = function()
    strings = ""
	for i = 1, #storagedrop do
        if short then
            strings = strings.."\n||"..(string.sub(storagedrop[i],1,3)).."|| "..(infoid[storagedrop[i]] or "?")..""
        else
            strings = strings.."\n||"..(string.upper(storagedrop[i])).."|| "..(infoid[storagedrop[i]] or "?")..""
        end
    end
    return strings
end

identity.itemFloat = function(id)
	local count = 0
	for _, obj in pairs(getObjects()) do
		if obj.id == id then
			count = count + obj.count
		end
	end
	return count
end

identity.webhookinfo = function()
	if infostorage then
        if not collectfromfarm then
            local text = [[
                $webHookUrl = "]]..linkinfostorage..[[/messages/]]..messageidinfostorage..[["
                $payload = @{
                    username = "BizzantiuM's"
                    embeds = @(
                        @{
                            title = "AUTO MOVE v1.2"
                            color = "]]..math.random(111111,999999)..[["
                            fields = @(
                                @{
                                    name = "BOT INFO"
                                    value = "]]..identity.botstatus()..[["
                                    inline = "false"
                                }
                                @{
                                    name = "STORAGE STATIC"
                                    value = "]]..""..[["
                                    inline = "false"
                                }
                                @{
                                    name = "WORLD TAKE"
                                    value = "]]..identity.takename()..[["
                                    inline = "true"
                                }
                                @{
                                    name = "WORLD DROP"
                                    value = "]]..identity.dropname()..[["
                                    inline = "true"
                                }
                            )
                            footer = @{
                                text = "[Hydrotrium] Developed by BizzantiuM's`nLast updated : ]]..(os.date"%d/%m/%y":upper().." at ")..os.date("%I")..":"..os.date("%M").." "..os.date("%p"):upper()..[["
                            }
                        }
                    )
                }
                [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
                Invoke-RestMethod -Uri $webHookUrl -Body ($payload | ConvertTo-Json -Depth 4) -Method Patch -ContentType 'application/json'
            ]]
            local pipe = io.popen("powershell -command -", "w")
            pipe:write(text)
            pipe:close()
        else
            local text = [[
                $webHookUrl = "]]..linkinfostorage..[[/messages/]]..messageidinfostorage..[["
                $payload = @{
                    username = "BizzantiuM's"
                    embeds = @(
                        @{
                            title = "AUTO MOVE v1.2"
                            color = "]]..math.random(111111,999999)..[["
                            fields = @(
                                @{
                                    name = "BOT INFO"
                                    value = "]]..identity.botstatus()..[["
                                    inline = "false"
                                }
                                @{
                                    name = "STORAGE STATIC"
                                    value = "]]..""..[["
                                    inline = "false"
                                }
                                @{
                                    name = "WORLD DROP"
                                    value = "]]..identity.dropname()..[["
                                    inline = "false"
                                }
                            )
                            footer = @{
                                text = "[Hydrotrium] Developed by BizzantiuM's`nLast updated : ]]..(os.date"%d/%m/%y":upper().." at ")..os.date("%I")..":"..os.date("%M").." "..os.date("%p"):upper()..[["
                            }
                        }
                    )
                }
                [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
                Invoke-RestMethod -Uri $webHookUrl -Body ($payload | ConvertTo-Json -Depth 4) -Method Patch -ContentType 'application/json'
            ]]
            local pipe = io.popen("powershell -command -", "w")
            pipe:write(text)
            pipe:close()
        end
    end
end

identity.botinfo = function(text)
    if webhookstatus then
        text = [[
            $webHookUrl = "]]..webhookstatuslink..[["
            $payload = @{
                content = "]]..text..[["
            }
            [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
            Invoke-RestMethod -Uri $webHookUrl -Body ($payload | ConvertTo-Json -Depth 4) -Method Post -ContentType "application/json"
        ]]
        local file = io.popen("powershell -command -", "w")
        file:write(text)
        file:close()
    end
end

identity.warp = function(world,door)
    name = world
    if door ~= "" then
        name = name .. "|" ..door
    end
    if getBot().world ~= string.upper(world) then
        addHook("onvariant","nuked",function (varlist)
            if varlist[0] == "OnConsoleMessage" then
                if string.find(varlist[1],"inaccessible.") then
                    nuked = true
                end
                if string.find(varlist[1],"experiencing high load,") then
                    subserver = true
                end
                if string.find(varlist[1],"people in it.") then
                    people = true
                end
                if string.find(varlist[1],"Players lower than level") then
                    level = true
                end
            end
        end)
        while getBot().world ~= string.upper(world) and not nuked and not subserver and not people and not level do
            while getBot().status ~= "online" do
                connect()
                sleep(reconnect)
                if getBot().status == "suspended" or getBot().status == "banned" or getBot().status == "maintenance" then
                    if removingbot then
                        removeBot(getBot().name)
                        sleep(2000)
                    end
                    error()
                end
            end
            sendPacket("action|join_request\nname|"..name.."\ninvitedWorld|0",3)
            sleep(warp)
        end
        removeHooks()
        sleep(2000)
    end
    if getBot().world == string.upper(world) then
        if door ~= "" then
            local stuck = 0
            while getTile(math.floor(getBot().x / 32),math.floor(getBot().y / 32)).fg == 6 and not wrong do
                while getBot().status ~= "online" do
                    connect()
                    sleep(reconnect)
                    if getBot().status == "suspended" or getBot().status == "banned" or getBot().status == "maintenance" then
                        if removingbot then
                            removeBot(getBot().name)
                            sleep(2000)
                        end
                        error()
                    end
                end
                sendPacket("action|join_request\nname|"..name.."\ninvitedWorld|0",3)
                sleep(warp)
                stuck = stuck + 1
                if stuck == 5 then
                    wrong = true
                end
            end
        end
    end
end

identity.reconnect = function(world,id,x,y)
    if getBot().world == "EXIT" and getBot().status == "online" then 
        identity.botinfo("[ ||"..getBot().name.."|| ] at EXIT ??, trying to joining world again @everyone")
        local count = 0
        while getBot().world ~= world:upper() do
            sendPacket("action|join_request\nname|"..world:upper().."\ninvitedWorld|0",3)
            sleep(warp)
            if getBot().world ~= world:upper() then 
                count = count + 1
                if count > 5 then
                    identity.botinfo("[ ||"..getBot().name.."|| ] Failed to joining world again, terminated script @everyone")
                    error()
                end
            end
        end
        if id ~= "" then
            local stucks = 0
            while getTile(math.floor(getBot().x / 32),math.floor(getBot().y / 32)).fg == 6 do
                sendPacket("action|join_request\nname|" ..world:upper().."|"..id:upper().."\ninvitedWorld|0", 3)
                sleep(warp)
                if stucks > 3 then
                    identity.botinfo("[ ||"..getBot().name.."|| ] Failed to reconnecting bot, stuck at white door. Terminated script @everyone")
                    error()
                end
            end
        end
        if x and y then
            while math.floor(getBot().x / 32) ~= x or math.floor(getBot().y / 32) ~= y do
                findPath(x,y)
                sleep(150)
            end
        end
        identity.botinfo("[ ||"..getBot().name.."|| ] success to joining world @everyone")
    end
    if getBot().status ~= "online" then
        identity.botinfo("[ ||"..getBot().name.."|| ] status is "..getBot().status.." @everyone")
        while getBot().status ~= "online" do
            connect()
            sleep(reconnect)
            if getBot().status == "suspended" or getBot().status == "banned" or getBot().status == "maintenance" then
                if removingbot then
                    removeBot(getBot().name)
                    sleep(2000)
                end
                error()
            end
        end
        local counts = 0
        while getBot().world ~= world:upper() do
            sendPacket("action|join_request\nname|"..world:upper().."\ninvitedWorld|0",3)
            sleep(warp)
            if getBot().world ~= world:upper() then 
                counts = counts + 1
                if counts > 5 then
                    identity.botinfo("[ ||"..getBot().name.."|| ] Failed to joining world again, terminated script @everyone")
                    error()
                end
            end
        end
        if id ~= "" then
            local stuckk = 0
            while getTile(math.floor(getBot().x / 32),math.floor(getBot().y / 32)).fg == 6 do
                sendPacket("action|join_request\nname|" ..world:upper().."|"..id:upper().."\ninvitedWorld|0", 3)
                sleep(warp)
                if stuckk > 3 then
                    identity.botinfo("[ ||"..getBot().name.."|| ] Failed to reconnecting bot, stuck at white door. Terminated script @everyone")
                    error()
                end
            end
        end
        if x and y then
            while math.floor(getBot().x / 32) ~= x or math.floor(getBot().y / 32) ~= y do
                findPath(x,y)
                sleep(150)
            end
        end
        identity.botinfo("[ ||"..getBot().name.."|| ] status is "..getBot().status.." @everyone")
    end
    if getTile(math.floor(getBot().x / 32),math.floor(getBot().y / 32)).fg == 6 then
        identity.botinfo("[ ||"..getBot().name.."|| ] Stuck at white door ! @everyone")
        local stuck = 0
        if id ~= "" then
            while getTile(math.floor(getBot().x / 32),math.floor(getBot().y / 32)).fg == 6 do
                sendPacket("action|join_request\nname|" ..world:upper().."|"..id:upper().."\ninvitedWorld|0", 3)
                sleep(warp)
                if stuck > 3 then
                    identity.botinfo("[ ||"..getBot().name.."|| ] Failed to reconnecting bot, stuck at white door. Terminated script @everyone")
                end
            end
        end
        if x and y then
            while math.floor(getBot().x / 32) ~= x or math.floor(getBot().y / 32) ~= y do
                findPath(x,y)
                sleep(150)
            end
        end
        identity.botinfo("[ ||"..getBot().name.."|| ] Already back to pos ! @everyone")
    end
end

identity.storingitems = function(threads)
    for i = identity.dropitems , #storagedrop do
        ::Here::
        setJob("Dropping items")
        world = storagedrop[i]
        identity.warp(world,doorstoragedrop)
        identity.webhookinfo()
        if not people then
            if not level then
                if not subserver then
                    if not nuked then
                        if not wrong then
                            if identity.itemFloat(itemId[1]) >= limit then
                                infoid[world] = "["..identity.itemFloat(itemId[1]).."] LIMIT !!!"
                                identity.botinfo("Drop storage : [ ||"..world.."|| ] has reached limit, skipped world @everyone")
                                print("Drop storage : [ "..world.." ] has reached limit, skipped world")
                                identity.dropitems = identity.dropitems + 1
                                if identity.dropitems > #storagedrop then
                                    infoid[world] = "["..identity.itemFloat(itemId[1]).."] LIMIT !!!"
                                    identity.botinfo("All drop storage has reached limit, Removing bot : [ ||"..getBot().name.."|| ] @everyone")
                                    print("All drop storage has reached limit, Removing bot : [ "..getBot().name.." ]")
                                    identity.webhookinfo()
                                    if removingbot then
                                        removeBot(getBot().name)
                                        sleep(2000)
                                    end
                                    error()
                                end
                                tileDrop = 0
                            else
                                for y,pack in pairs(itemId) do
                                    for i,tile in pairs(getTiles()) do
                                        if separated then
                                            if tile.fg == 0 or tile.bg == 0 then
                                                ::BACK::
                                                findPath(dropX + (tileDrop),dropY - (y-1))
                                                sleep(1000)
                                                local count = 0
                                                identity.reconnect(world,doorstoragedrop,dropX + (tileDrop),dropY - (y-1))
                                                if dropX + (tileDrop) >= 98 then
                                                    dropY = dropY - 1
                                                    tileDrop = 0
                                                end
                                                while findItem(pack) > 0 do
                                                    drop(pack)
                                                    sleep(drops)
                                                    identity.reconnect(world,doorstoragedrop,dropX + (tileDrop),dropY - (y-1))
                                                    count = count + 1
                                                    if count >= 2 then
                                                        tileDrop = tileDrop + 1
                                                        goto BACK
                                                    end
                                                end
                                            end
                                        else
                                            if tile.fg == 0 or tile.bg == 0 then
                                                ::BACK::
                                                findPath(dropX + (tileDrop),dropY)
                                                sleep(1000)
                                                local count = 0
                                                identity.reconnect(world,doorstoragedrop,dropX + (tileDrop),dropY - (y-1))
                                                if dropX + (tileDrop) >= 98 then
                                                    dropY = dropY - 1
                                                    tileDrop = 0
                                                end
                                                while findItem(pack) > 0 do
                                                    drop(pack)
                                                    sleep(drops)
                                                    identity.reconnect(world,doorstoragedrop,dropX + (tileDrop),dropY - (y-1))
                                                    count = count + 1
                                                    if count >= 2 then
                                                        tileDrop = tileDrop + 1
                                                        goto BACK
                                                    end
                                                end
                                            end
                                        end
                                        if findItem(pack) == 0 then
                                            break
                                        end
                                    end
                                end
                                sleep(100)
                                break
                            end
                        else
                            infoid[world] = "WRONG DOOR !!!"
                            wrong = false
                            sleep(5000)
                            print("[ "..world.." ] Id door drop storage is wrong, check ur id door!")
                            identity.botinfo("[ ||"..world.."|| ] Id door drop storage is wrong, check ur id door! @everyone")
                            identity.dropitems = identity.dropitems + 1
                            if identity.dropitems > #storagedrop then
                                print("All drop storage has reached limit")
                                identity.botinfo("All drop storage has reached limit! Removing bot : [ ||"..getBot().name.."|| ] @everyone")
                                identity.webhookinfo()
                                if removingbot then
                                    removeBot(getBot().name)
                                    sleep(2000)
                                end
                                error()
                            end
                            tileDrop = 0
                        end
                    else
                        infoid[world] = "NUKED !!!"
                        nuked = false
                        sleep(5000)
                        print("[ "..world.." ] drop Storage is NUKED, check ur storage!")
                        identity.botinfo("[ "..world.." ] drop Storage is NUKED, check ur storage! @everyone")
                        identity.dropitems = identity.dropitems + 1
                        if identity.dropitems > #storagedrop then
                            print("All drop storage has reached limit!")
                            identity.botinfo("All drop storage has reached limit! Removing bot : [ ||"..getBot().name.."|| ] @everyone")
                            identity.webhookinfo()
                            if removingbot then
                                removeBot(getBot().name)
                                sleep(2000)
                            end
                            error()
                        end
                        tileDrop = 0
                    end
                else
                    subserver = false
                    sleep(5000)
                    print("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
                    identity.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
                    sleep(120000)
                    goto Here
                end
            else
                level = false
                sleep(5000)
                print("World : "..world.." has level limit, change ur level world limit")
                identity.botinfo("World : "..world.." has level limit, change ur level world limit !, terminated script @everyone")
                error()
            end
        else
            people = false
            sleep(5000)
            print("World : "..world.." has full people, sleeping for 2 minutes")
            identity.botinfo("World : "..world.." has full people, sleeping for 2 minutes")
            sleep(120000)
            goto Here
        end
    end
    infoid[world] = "["..identity.itemFloat(itemId[1]).."]"
end

identity.takestorage = function()
    for i = identity.takeitems, #storagetake do
        ::Here::
        setJob("Taking items")
        world = storagetake[i]
        identity.warp(world,doorstoragetake)
        identity.webhookinfo()
        if not people then
            if not level then
                if not subserver then
                    if not nuked then
                        if not wrong then
                            if not looping then
                                if identity.itemFloat(itemId[1]) == 0 then
                                    infoid[world] = "["..identity.itemFloat(itemId[1]).."] EMPTY !!!"
                                    identity.botinfo("Take storage : [ ||"..world.."|| ] has empty, skipped world @everyone")
                                    print("Take storage : [ "..world.." ] has empty, skipped world")
                                    identity.takeitems = identity.takeitems + 1
                                    if identity.takeitems > #storagetake then
                                        infoid[world] = "["..identity.itemFloat(itemId[1]).."] EMPTY !!!"
                                        identity.botinfo("All take storage has empty, Removing bot : [ ||"..getBot().name.."|| ] @everyone")
                                        print("All take storage has empty, Removing bot : [ "..getBot().name.." ]")
                                        identity.webhookinfo()
                                        if removingbot then
                                            removeBot(getBot().name)
                                            sleep(2000)
                                        end
                                        error()
                                    end
                                else
                                    for _, pack in pairs(itemId) do
                                        while findItem(pack) == 0 do
                                            for _, object in pairs(getObjects()) do
                                                if object.id == pack then
                                                    findPath(math.floor((object.x)/32), math.floor((object.y)/32))
                                                    sleep(1000)
                                                    collect(collects)
                                                    sleep(1000)
                                                    identity.reconnect(world,doorstoragetake,math.floor((object.x)/32), math.floor((object.y)/32))
                                                end
                                                if findItem(pack) > 0 then
                                                    break
                                                end
                                            end
                                        end
                                    end
                                    sleep(100)
                                    break
                                end
                            else
                                for _, pack in pairs(itemId) do
                                    for _, object in pairs(getObjects()) do
                                        if object.id == pack then
                                            findPath(math.floor((object.x)/32), math.floor((object.y)/32))
                                            sleep(1000)
                                            collect(collects)
                                            sleep(1000)
                                            identity.reconnect(world,doorstoragetake,math.floor((object.x)/32), math.floor((object.y)/32))
                                        end
                                        if findItem(pack) > 0 then
                                            break
                                        end
                                    end
                                end
                                sleep(100)
                                break
                            end
                        else
                            infoid[world] = "WRONG DOOR !!!"
                            wrong = false
                            sleep(5000)
                            print("[ "..world.." ] Id door take storage is wrong, check ur id door!")
                            identity.botinfo("[ ||"..world.."|| ] Id door take storage is wrong, check ur id door! @everyone")
                            identity.takeitems = identity.takeitems + 1
                            if identity.takeitems > #storagetake then
                                print("All take storage has empty")
                                identity.botinfo("All take storage has empty! Removing bot : [ ||"..getBot().name.."|| ] @everyone")
                                identity.webhookinfo()
                                if removingbot then
                                    removeBot(getBot().name)
                                    sleep(2000)
                                end
                                error()
                            end
                        end
                    else
                        infoid[world] = "NUKED !!!"
                        nuked = false
                        sleep(5000)
                        print("[ "..world.." ] take Storage is NUKED, check ur storage!")
                        identity.botinfo("[ "..world.." ] take Storage is NUKED, check ur storage! @everyone")
                        identity.takeitems = identity.takeitems + 1
                        if identity.takeitems > #storagetake then
                            print("All take storage has empty!")
                            identity.botinfo("All take storage has empty! Removing bot : [ ||"..getBot().name.."|| ] @everyone")
                            identity.webhookinfo()
                            if removingbot then
                                removeBot(getBot().name)
                                sleep(2000)
                            end
                            error()
                        end
                    end
                else
                    subserver = false
                    sleep(5000)
                    print("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
                    identity.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
                    sleep(120000)
                    goto Here
                end
            else
                level = false
                sleep(5000)
                print("World : "..world.." has level limit, change ur level world limit")
                identity.botinfo("World : "..world.." has level limit, change ur level world limit !, terminated script @everyone")
                error()
            end
        else
            people = false
            sleep(5000)
            print("World : "..world.." has full people, sleeping for 2 minutes")
            identity.botinfo("World : "..world.." has full people, sleeping for 2 minutes")
            sleep(120000)
            goto Here
        end
    end
    infoid[world] = "["..identity.itemFloat(itemId[1]).."]"
end

identity.dropnpg = function()
    ::BACK::
    setJob("Dropping NPG")
    world = identity.splitt(worldnpg[index],"[^:]+")[1]
    door = identity.splitt(worldnpg[index],"[^:]+")[2]
    identity.warp(world,door)
    if not people then
        if not level then
            if not subserver then
                if not nuked then
                    if not wrong then
                        while findItem(6086) > 0 do
                            drop(6086)
                            sleep(drops)
                            move(-1,0)
                            sleep(250)
                        end
                    else
                        wrong = false
                        sleep(5000)
                        print("Id door world npg is wrong, check ur id door !!")
                        identity.botinfo("Id door world npg is wrong, check ur id door !! @everyone")
                        error()
                    end
                else
                    nuked = false
                    sleep(5000)
                    print("World npg is nuked, check ur world !!")
                    identity.botinfo("World npg is nuked, check ur world !! @everyone")
                    error()
                end
            else
                subserver = false
                sleep(5000)
                print("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
                identity.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
                sleep(120000)
                goto BACK
            end
        else
            level = false
            sleep(5000)
            print("World : "..world.." has level limit, change ur level world limit")
            identity.botinfo("World : "..world.." has level limit, change ur level world limit !, terminated script @everyone")
            error()
        end
    else
        people = false
        sleep(5000)
        print("World : "..world.." has full people, sleeping for 2 minutes")
        identity.botinfo("World : "..world.." has full people, sleeping for 2 minutes")
        sleep(120000)
        goto BACK
    end
end

identity.npg = function()
    ::BACK::
    world = identity.splitt(worldnpg[index],"[^:]+")[1]
    door = identity.splitt(worldnpg[index],"[^:]+")[2]
    setJob("Taking NPG")
    identity.warp(world,door)
    if not people then
        if not level then
            if not subserver then
                if not nuked then
                    if not wrong then
                        while findItem(6086) == 0 do
                            for _, obj in pairs(getObjects()) do
                                if obj.id == 6086 then
                                    findPath(math.floor(obj.x / 32),math.floor(obj.y / 32))
                                    sleep(1000)
                                    collect(2)
                                    sleep(1000)
                                    identity.reconnect(world,door,math.floor(obj.x / 32),math.floor(obj.y / 32))
                                end
                                if findItem(6086) > 0  then
                                    break
                                end
                            end
                        end
                        wear(6086)
                        sleep(500)
                        move(-1,0)
                        sleep(1000)
                        if findItem(6086) > 1 then
                            drop(6086,findItem(6086) - 1)
                            sleep(drops)
                        end
                    else
                        wrong = false
                        sleep(5000)
                        print("Id door world npg is wrong, check ur id door !!")
                        identity.botinfo("Id door world npg is wrong, check ur id door !! @everyone")
                        error()
                    end
                else
                    nuked = false
                    sleep(5000)
                    print("World npg is nuked, check ur world !!")
                    identity.botinfo("World npg is nuked, check ur world !! @everyone")
                    error()
                end
            else
                subserver = false
                sleep(5000)
                print("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
                identity.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
                sleep(120000)
                goto BACK
            end
        else
            level = false
            sleep(5000)
            print("World : "..world.." has level limit, change ur level world limit")
            identity.botinfo("World : "..world.." has level limit, change ur level world limit !, terminated script @everyone")
            error()
        end
    else
        people = false
        sleep(5000)
        print("World : "..world.." has full people, sleeping for 2 minutes")
        identity.botinfo("World : "..world.." has full people, sleeping for 2 minutes")
        sleep(120000)
        goto BACK
    end
end

identity.killing = function()
    for _, world in pairs(farmList) do
        ::BACK::
        identity.warp(world,"")
        identity.reconnect(world,"")
        if not people then
            if not level then
                if not subserver then
                    if not nuked then
                        sleep(kill)
                    else
                        nuked = false
                        sleep(5000)
                        print(""..world.." is NUKED!, check ur world !!")
                        identity.botinfo("[ ||"..world.."|| ] is NUKED!, check ur world !! @everyone")
                    end
                else
                    subserver = false
                    sleep(5000)
                    print("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
                    identity.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
                    sleep(120000)
                    goto BACK
                end
            else
                level = false
                sleep(5000)
                print("World : "..world.." has level limit, change ur world history list")
                identity.botinfo("World : "..world.." has level limit, change ur world history list. SC Terminated @everyone")
                error()
            end
        else
            people = false
            sleep(5000)
            print("World : "..world.." has full people, sleeping for 2 minutes")
            identity.botinfo("World : "..world.." has full people, sleeping for 2 minutes")
            sleep(120000)
            goto BACK
        end
    end
end

identity.take = function(threads)
    for _, obj in pairs(getObjects()) do
        if obj.id == itemId[1] then
            if identity.itemFloat(obj.id) ~= 0 then
                findPath(math.floor(obj.x / 32),math.floor(obj.y / 32))
                sleep(collects)
                collect(2)
                sleep(collects)
                identity.reconnect(threads,doorcollect,math.floor(obj.x / 32),math.floor(obj.y / 32))
            end
            if findItem(obj.id) > 180 then
                identity.storingitems(threads)
                setJob("Collect from farm")
                identity.warp(threads,doorcollect)
            end
        end
    end
end

identity.writeFile = function(text)
    local file = io.open("WorldStatus.txt","a")
    file:write(text.."\n")
    file:close()
end

if BizzantiuM.version == "1.2" and BizzantiuM.handler == "akbarsht" then
    if killghost then
        if findItem(6086) == 0 then
            identity.npg()
            identity.killing()
            identity.dropnpg()
        else
            identity.killing()
            identity.dropnpg()
        end
        print("All ghost are killed, please disable auto kill ghost then re-execute script")
        identity.botinfo("All ghost are killed, please disable auto kill ghost then re-execute script @everyone")
        error()
    end
    if collectfromfarm then
        for idx, value in ipairs(worlds) do
            ::BACK::
            setJob("Collect from farm")
            identity.warp(value,doorcollect)
            identity.webhookinfo()
            if not people then
                if not level then
                    if not subserver then
                        if not nuked then
                            if not wrong then
                                identity.take(value)
                            else
                                identity.writeFile("[ "..value.." ] is wrong id")
                                sleep(1000)
                                wrong = false
                                sleep(5000)
                                print(""..value.." is wrong door id, skipped world")
                                identity.botinfo("[ ||"..value.."|| ] is wrong door id, skipped world @everyone")
                            end
                        else
                            identity.writeFile("[ "..value.." ] is NUKED !!")
                            sleep(1000)
                            nuked = false
                            sleep(5000)
                            print(""..value.." is NUKED!, check ur world !!")
                            identity.botinfo("[ ||"..value.."|| ] is NUKED!, check ur world !! @everyone")
                        end
                    else
                        subserver = false
                        sleep(5000)
                        print("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
                        identity.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
                        sleep(120000)
                        goto BACK
                    end
                else
                    level = false
                    sleep(5000)
                    print("World : "..value.." has level limit, change ur level world limit")
                    identity.botinfo("World : "..value.." has level limit, change ur level world limit !, terminated script @everyone")
                    error()
                end
            else
                people = false
                sleep(5000)
                print("World : "..value.." has full people, sleeping for 2 minutes")
                identity.botinfo("World : "..value.." has full people, sleeping for 2 minutes")
                sleep(120000)
                goto BACK
            end
        end
        print("[ "..getBot().name.." ] Already finished all world, Terminated script!")
        identity.botinfo("[ ||"..getBot().name.."|| ] Already finished all world, Terminated script! @everyone")
        if removingbot then
            removeBot(getBot().name)
            sleep(2000)
        end
        error()
    else
        if not looping then
            while true do
                identity.takestorage()
                identity.storingitems(threads)
            end
        else
            for idx, items in pairs(itemId) do
                ::LOOP::
                identity.takestorage()
                if findItem(items) == 0 then
                    goto LOOP
                else
                    identity.storingitems(threads)
                    goto LOOP
                end
            end
        end
    end
else
    print("This script made by BizzantuM's server, buy at another server = RESELLER !!")
end
