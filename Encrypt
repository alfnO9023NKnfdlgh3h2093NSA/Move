webhook = setting.webhook.info.url
message = setting.webhook.info.messageid
local cTile = 0
local ak = setting.storage.worldDrop.dropposition.x - 1
local wir = setting.storage.worldDrop.dropposition.y - 1
packkk = 1
wirz = {}
bajigur = ""

function infokand(text)
    if setting.webhook.enable then
        text = [[
            $webHookUrl = "]]..setting.webhook.status.url..[["
            $payload = @{
                content = "]]..text..[["
            }
            [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
            Invoke-RestMethod -Uri $webHookUrl -Body ($payload | ConvertTo-Json -Depth 4) -Method Post -ContentType "application/json"
        ]]
        local file = io.popen("powershell -command -", "w")
        file:write(text)
        file:close()
    end
end

function round(n)
    return n % 1 > 0.5 and math.ceil(n) or math.floor(n)
end

function wirrz()
    bajigur = ""
	for i = 1, #setting.storage.worldTake.world do
		bajigur = bajigur.."\n||"..string.upper(setting.storage.worldTake.world[i]).."|| "..(wirz[setting.storage.worldTake.world[i]] or "?")..""
    end
    return bajigur
end

function wirrzz()
    bajigur = ""
	for i = 1, #setting.storage.worldDrop.world do
		bajigur = bajigur.."\n||"..string.upper(setting.storage.worldDrop.world[i]).."|| "..(wirz[setting.storage.worldDrop.world[i]] or "?")..""
    end
    return bajigur
end

function webcuy(link,id)
	if setting.webhook.enable then
        local text = [[
            $webHookUrl = "]]..link..[[/messages/]]..id..[["
            $payload = @{
                username = "BizzantiuM's"
                embeds = @(
                    @{
                        title = "AUTO MOVE v1.2 [STORAGE STATIC]"
                        color = "]]..math.random(111111,999999)..[["
                        fields = @(
                            @{
                                name = "TAKE"
                                value = "]]..wirrz()..[["
                                inline = "false"
                            }
                            @{
                                name = "DROP"
                                value = "]]..wirrzz()..[["
                                inline = "true"
                            }
                        )
                        footer = @{
                            text = "Developed by BizzantiuM's`nLast updated : ]]..(os.date"%d/%m/%y":upper().." at ")..os.date("%I")..":"..os.date("%M").." "..os.date("%p"):upper()..[["
                        }
                    }
                )
            }
            [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
            Invoke-RestMethod -Uri $webHookUrl -Body ($payload | ConvertTo-Json -Depth 4) -Method Patch -ContentType 'application/json'
        ]]
        local pipe = io.popen("powershell -command -", "w")
        pipe:write(text)
        pipe:close()
    end
end

function warp(world,id)
	local join = 0
    bz = world
    if door then
        bz = bz .. "|" .. door
    end
    if getBot().world ~= string.upper(world) then
        while getBot().world ~= world:upper() and not nuked do
            sendPacket("action|join_request\nname|"..bz.."\ninvitedWorld|0",3)
            sleep(setting.delay.warp)
            if join == 10 then
                nuked = true
            else
                join = join + 1
            end
        end
        sleep(1000)
    end
    if door and getBot().world == string.upper(world) then
        local stuck = 0
        while getTile(math.floor(getBot().x / 32),math.floor(getBot().y / 32)).fg == 6 and not wrong do
            sendPacket("action|join_request\nname|"..world:upper()..'|'..id:upper().."\ninvitedWorld|0",3)
            sleep(setting.delay.warp)
            if stuck == 5 then
                wrong = true
            else
                stuck = stuck + 1
            end
        end
    end
end

function reconnect(world,id,x,y)
    if getBot().status ~= 'online' then
        infokand(''..getBot().name..' status is '..getBot().status..' ! @everyone')
        sleep(100)
        while getBot().status ~= 'online' do
            connect()
            sleep(setting.delay.reconnect)
        end
        while getBot().world ~= world:upper() do
            sendPacket('action|join_request\nname|'..world:upper()..'\ninvitedWorld|0',3)
            sleep(setting.delay.warp)
        end
        if id ~= '' then
            if getTile(math.floor(getBot().x / 32),math.floor(getBot().y / 32)).fg == 6 then
                repeat
                sendPacket('action|join_request\nname|' ..world:upper()..'|'..id:upper()..'\ninvitedWorld|0', 3)
                sleep(setting.delay.warp)
                until getTile(math.floor(getBot().x / 32),math.floor(getBot().y / 32)).fg ~= 6
            end
        end
        if x and y then
            while math.floor(getBot().x / 32) ~= x or math.floor(getBot().y / 32) ~= y do
                findPath(x,y)
                sleep(100)
            end
        end
        infokand(''..getBot().name..' status is '..getBot().status..' ! @everyone')
        sleep(100)
    end
end

function gscan(id)
	local count = 0
	for _, obj in pairs(getObjects()) do
		if obj.id == id then
			count = count + obj.count
		end
	end
	return count
end

function storePack(worlds)
    for i = packkk , #setting.storage.worldDrop.world do
        setJob('Storing items')
        world = setting.storage.worldDrop.world[i]
        door = setting.storage.worldDrop.door
        warp(world,door)
        webcuy(webhook,message)
        if not nuked then
            if not wrong then
                if gscan(setting.itemId[1]) > setting.storage.worldDrop.limit or gscan(setting.itemId[1]) == setting.storage.worldDrop.limit or gscan(setting.itemId[1]) >= setting.storage.worldDrop.limit then
                    wirz[world] = "["..gscan(setting.itemId[1]).."] LIMIT !!!"
                    infokand('[ ||'..getBot().world..'|| ] Has reached limit, skipped world')
                    packkk = packkk + 1
                    if packkk > #setting.storage.worldDrop.world then
                        infokand("ALL STORAGE IS REACHED LIMIT !!! @everyone")
                        if setting.options.removeBot then
                            removeBot(getBot().name)
                            sleep(100)
                        end
                        error()
                    end
                    cTile = 0
                else
                    for y,pack in pairs(setting.itemId) do
                        for i,tile in pairs(getTiles()) do
                            if setting.options.seperateDrop then
                                if tile.fg == 0 or tile.bg == 0 then
                                    ::packzz::
                                    findPath(ak + (cTile),wir - (y-1))
                                    sleep(1000)
                                    local count = 0
                                    reconnect(world,door,ak + (cTile),wir - (y-1))
                                    if ak + (cTile) >= 98 then
                                        wir = wir - 1
                                        cTile = 0
                                    end
                                    while findItem(pack) > 0 do
                                        drop(pack)
                                        sleep(setting.delay.drop)
                                        reconnect(world,door,ak + (cTile),wir - (y-1))
                                        count = count + 1
                                        if count >= 2 then
                                            cTile = cTile + 1
                                            goto packzz
                                        end
                                    end
                                    
                                end
                                if findItem(pack) == 0 then
                                    break
                                end
                            else
                                if tile.fg == 0 or tile.bg == 0 then
                                    ::packz::
                                    findPath(ak + (cTile),wir)
                                    sleep(1000)
                                    local count = 0
                                    reconnect(world,door,ak + (cTile),wir)
                                    if ak + (cTile) >= 98 then
                                        wir = wir - 1
                                        cTile = 0
                                    end
                                    while findItem(pack) > 0 do
                                        drop(pack)
                                        sleep(setting.delay.drop)
                                        reconnect(world,door,ak + (cTile),wir)
                                        count = count + 1
                                        if count >= 2 then
                                            cTile = cTile + 1
                                            goto packz
                                        end
                                    end
                                end
                                if findItem(pack) == 0 then
                                    break
                                end
                            end
                        end
                    end
                    sleep(100)
                    break
                end
            else
                wirz[world] = "WRONG DOOR !!!"
                print("Id door world drop is wrong, check ur id door !!")
                infokand(setting.webhook.status,"Id door world drop is wrong, check ur id door !! @everyone")
                packkk = packkk + 1
                if packkk > #setting.storage.worldDrop.world then
                    print("ALL WORLD DROP IS REACHED LIMIT !!!")
                    infokand(setting.webhook.status,"ALL WORLD DROP IS REACHED LIMIT !!! @everyone")
                    if setting.options.removeBot then
                        removeBot(getBot().name)
                        sleep(100)
                    end
                    error()
                end
                cTile = 0
            end
        else
            wirz[world] = "NUKED !!!"
            print("World drop is NUKED, check ur storage !!")
            infokand(setting.webhook.status,"World drop is NUKED, check ur storage !! @everyone")
            packkk = packkk + 1
            if packkk > #setting.storage.worldDrop.world then
                print("ALL WORLD DROP IS REACHED LIMIT !!!")
                infokand(setting.webhook.status,"ALL WORLD DROP IS REACHED LIMIT !!! @everyone")
                if setting.options.removeBot then
                    removeBot(getBot().name)
                    sleep(100)
                end
                error()
            end
            cTile = 0
        end
    end
    wirz[world] = "["..gscan(setting.itemId[1]).."]"
end

function take(worlds)
    setJob('Collecting items')
    collectSet(true,3)
    for _, items in pairs(setting.itemId) do
        for _, object in pairs(getObjects()) do
            if object.id == items then
                if gscan(setting.itemId[1]) ~= 0 and findItem(items) < setting.amount then
                    findPath(math.floor((object.x)/32), math.floor((object.y)/32))
                end
                if findItem(items) >= setting.amount then
                    collectSet(false)
                    wirz[worlds] = '['..gscan(setting.itemId[1])..']'
                    storePack(worlds)
                    setJob('Collecting items')
                    door = setting.storage.worldTake.door
                    warp(worlds,door)
                    webcuy(webhook,message)
                    collectSet(true,3)
                end
            end
        end
    end
end

if BizzantiuM.version == '1.2' and BizzantiuM.maker == 'akbarsht' then
    sleep(math.random(1000,10000))
    for i , list in pairs(setting.storage.worldTake.world) do
        door = setting.storage.worldTake.door
        warp(list,door)
        webcuy(webhook,message)
        if not nuked then
            if not wrong then
                take(list)
            else
                wirz[list] = 'WRONG ID'
                wrong = false
                sleep(1000)
                print("||"..list.."|| is wrong door id, skipped world")
                infokand("||"..list.."|| is wrong door id, skipped world @everyone")
            end
        else
            wirz[list] = 'NUKED'
            nuked = false
            sleep(1000)
            print("||"..list.."|| is NUKED!, check ur world")
            infokand("||"..list.."|| is NUKED!, check ur world @everyone")
        end
    end
end
print('ALL WORLD TAKE IS EMPTY, Terminated script ! ')
infokand('ALL WORLD TAKE IS EMPTY @everyone')
sleep(150)
if setting.options.removeBot then
    removeBot(getBot().name)
    sleep(150)
end
error() 
