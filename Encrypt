for i, bot in pairs(getBots()) do
    if getBot().name:upper() == bot.name:upper() then
        indexbot = i
    end
end

param = indexbot * setting.farmList.worldperbot
worlds = {}
infoid = {}
local identity = {}
identity.param = setting.farmList.door
identity.status = setting.webhook.botstatus.url
identity.webhook = setting.webhook.infoworld.url
identity.message = setting.webhook.infoworld.messageid
identity.dropitems = 1
identity.takeitems = 1
strings = ""
index = 1
local tileDrop = 0
dropX = setting.storage.worldDrop.dropposition.x - 1
dropY = setting.storage.worldDrop.dropposition.y - 1

for i =  1,setting.farmList.worldperbot do
    table.insert(worlds,setting.farmList.world[math.floor((indexbot - 1) * setting.farmList.worldperbot + i)])
    identity.door = identity.param
end

identity.splitt = function(str, ptr)
    if not ptr then 
        ptr = "%s"
    end
    local tbl = {}
    for string in string.gmatch(str, ptr) do
        table.insert(tbl, string) 
    end
    return tbl
end

identity.round = function(n)
    return n % 1 > 0.5 and math.ceil(n) or math.floor(n)
end

identity.botstatus = function()
    strings = ""
    for _, bot in pairs(getBots()) do
        if setting.webhook.short then
            strings = strings.."\n"..""..(string.sub(bot.name,1,3)).." | ||"..(string.sub(bot.world,1,3)).."|| | "..(string.upper(bot.status,1,2)).."" 
        else
            strings = strings.."\n"..""..(string.upper(bot.name)).." | ||"..(string.upper(bot.world)).."|| | "..(string.upper(bot.status)).."" 
        end
    end
    return strings
end

identity.takename = function()
    strings = ""
	for i = 1, #setting.storage.worldTake.world do
        if setting.webhook.short then
            strings = strings.."\n||"..(string.sub(setting.storage.worldTake.world[i],1,3)).."|| "..(infoid[setting.storage.worldTake.world[i]] or "?")..""
        else
            strings = strings.."\n||"..(string.upper(setting.storage.worldTake.world[i])).."|| "..(infoid[setting.storage.worldTake.world[i]] or "?")..""
        end
    end
    return strings
end

identity.dropname = function()
    strings = ""
	for i = 1, #setting.storage.worldDrop.world do
        if setting.webhook.short then
            strings = strings.."\n||"..(string.sub(setting.storage.worldDrop.world[i],1,3)).."|| "..(infoid[setting.storage.worldDrop.world[i]] or "?")..""
        else
            strings = strings.."\n||"..(string.upper(setting.storage.worldDrop.world[i])).."|| "..(infoid[setting.storage.worldDrop.world[i]] or "?")..""
        end
    end
    return strings
end


identity.itemFloat = function(id)
	local count = 0
	for _, obj in pairs(getObjects()) do
		if obj.id == id then
			count = count + obj.count
		end
	end
	return count
end

identity.webhookinfo = function()
	if setting.webhook.access then
        if not collectfromfarm then
            local text = [[
                $webHookUrl = "]]..identity.webhook..[[/messages/]]..identity.message..[["
                $payload = @{
                    username = "BizzantiuM's"
                    embeds = @(
                        @{
                            title = "AUTO MOVE v1.1"
                            color = "]]..math.random(111111,999999)..[["
                            fields = @(
                                @{
                                    name = "BOT INFO"
                                    value = "]]..identity.botstatus()..[["
                                    inline = "false"
                                }
                                @{
                                    name = "STORAGE STATIC"
                                    value = "]]..""..[["
                                    inline = "false"
                                }
                                @{
                                    name = "WORLD TAKE"
                                    value = "]]..identity.takename()..[["
                                    inline = "true"
                                }
                                @{
                                    name = "WORLD DROP"
                                    value = "]]..identity.dropname()..[["
                                    inline = "true"
                                }
                            )
                            footer = @{
                                text = "[Hydrotrium] Developed by BizzantiuM's`nLast updated : ]]..(os.date"%d/%m/%y":upper().." at ")..os.date("%I")..":"..os.date("%M").." "..os.date("%p"):upper()..[["
                            }
                        }
                    )
                }
                [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
                Invoke-RestMethod -Uri $webHookUrl -Body ($payload | ConvertTo-Json -Depth 4) -Method Patch -ContentType 'application/json'
            ]]
            local pipe = io.popen("powershell -command -", "w")
            pipe:write(text)
            pipe:close()
        else
            local text = [[
                $webHookUrl = "]]..identity.webhook..[[/messages/]]..identity.message..[["
                $payload = @{
                    username = "BizzantiuM's"
                    embeds = @(
                        @{
                            title = "AUTO MOVE v1.0"
                            color = "]]..math.random(111111,999999)..[["
                            fields = @(
                                @{
                                    name = "BOT INFO"
                                    value = "]]..identity.botstatus()..[["
                                    inline = "false"
                                }
                                @{
                                    name = "STORAGE STATIC"
                                    value = "]]..""..[["
                                    inline = "false"
                                }
                                @{
                                    name = "WORLD DROP"
                                    value = "]]..identity.dropname()..[["
                                    inline = "false"
                                }
                            )
                            footer = @{
                                text = "[Hydrotrium] Developed by BizzantiuM's`nLast updated : ]]..(os.date"%d/%m/%y":upper().." at ")..os.date("%I")..":"..os.date("%M").." "..os.date("%p"):upper()..[["
                            }
                        }
                    )
                }
                [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
                Invoke-RestMethod -Uri $webHookUrl -Body ($payload | ConvertTo-Json -Depth 4) -Method Patch -ContentType 'application/json'
            ]]
            local pipe = io.popen("powershell -command -", "w")
            pipe:write(text)
            pipe:close()
        end
    end
end

identity.botinfo = function(text)
    if setting.webhook.access then
        text = [[
            $webHookUrl = "]]..identity.status..[["
            $payload = @{
                content = "]]..text..[["
            }
            [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
            Invoke-RestMethod -Uri $webHookUrl -Body ($payload | ConvertTo-Json -Depth 4) -Method Post -ContentType "application/json"
        ]]
        local file = io.popen("powershell -command -", "w")
        file:write(text)
        file:close()
    end
end

identity.warp = function(world,door)
    name = world
    door = identity.door
    if identity.door then
        name = name .. "|" ..identity.door
    end
    if getBot().world ~= string.upper(world) then
        addHook("onvariant","nuked",function (varlist)
            if varlist[0] == "OnConsoleMessage" then
                if string.find(varlist[1],"inaccessible.") then
                    nuked = true
                end
            end
        end)
        while getBot().world ~= string.upper(world) and not nuked do
            sendPacket("action|join_request\nname|"..name.."\ninvitedWorld|0",3)
            sleep(setting.delay.warp)
        end
        removeHooks()
        sleep(1000)
    end
    if identity.door and getBot().world == string.upper(world) then
        local stuck = 0
        while getTile(math.floor(getBot().x / 32),math.floor(getBot().y / 32)).fg == 6 and not wrong do
            sendPacket("action|join_request\nname|"..name.."\ninvitedWorld|0",3)
            sleep(setting.delay.warp)
            stuck = stuck + 1
            if stuck == 5 then
                wrong = true
            end
        end
    end
end

identity.reconnect = function(world,id,x,y)
    if getBot().status ~= "online" then
        identity.botinfo("[ ||"..getBot().name.."|| ] status is "..getBot().status.." @everyone")
        print("[ "..getBot().name.." ] status is "..getBot().status.."")
        while getBot().status ~= "online" do
            connect()
            sleep(setting.delay.reconnect)
            if getBot().status == "suspended" or getBot().status == "banned" or getBot().status == "ercon" then
                identity.botinfo("[ ||"..getBot().name.."|| ] status is "..getBot().status..", removing bot @everyone")
                print("[ "..getBot().name.." ] status is "..getBot().status..", removing bot")
                if setting.mode.removeBot then
                    removeBot(getBot().name)
                    sleep(100)
                end
                error()
            end
        end
        while getBot().world ~= world:upper() do
            sendPacket("action|join_request\nname|"..world:upper().."\ninvitedWorld|0",3)
            sleep(setting.delay.warp)
        end
        while getTile(math.floor(getBot().x / 32),math.floor(getBot().y / 32)).fg == 6 do
            sendPacket("action|join_request\nname|" ..world:upper().."|"..id:upper().."\ninvitedWorld|0", 3)
            sleep(setting.delay.warp)
            if getTile(math.floor(getBot().x / 32),math.floor(getBot().y / 32)).fg ~= 6 then
                while math.floor(getBot().x / 32) ~= x or math.floor(getBot().y / 32) ~= y do
                    findPath(x,y)
                    sleep(150)
                end
            end
        end
        identity.botinfo("[ ||"..getBot().name.."|| ] status is "..getBot().status.." @everyone")
        print("[ "..getBot().name.." ] status is "..getBot().status.."")
    end
    while getTile(math.floor(getBot().x / 32),math.floor(getBot().y / 32)).fg == 6 do
        sendPacket("action|join_request\nname|" ..world:upper().."|"..id:upper().."\ninvitedWorld|0", 3)
        sleep(setting.delay.warp)
        if getTile(math.floor(getBot().x / 32),math.floor(getBot().y / 32)).fg ~= 6 then
            while math.floor(getBot().x / 32) ~= x or math.floor(getBot().y / 32) ~= y do
                findPath(x,y)
                sleep(150)
            end
        end
    end
end

identity.storingitems = function(threads)
    for i = identity.dropitems , #setting.storage.worldDrop.world do
        setJob("Dropping items")
        world = setting.storage.worldDrop.world[i]
        identity.door = setting.storage.worldDrop.door
        identity.warp(world,identity.door)
        identity.webhookinfo()
        if not nuked then
            if not wrong then
                if identity.itemFloat(setting.itemId[1]) >= setting.storage.worldDrop.limit then
                    infoid[world] = "["..identity.itemFloat(setting.itemId[1]).."] LIMIT !!!"
                    identity.botinfo("Drop storage : [ ||"..world.."|| ] has reached limit, skipped world @everyone")
                    print("Drop storage : [ "..world.." ] has reached limit, skipped world")
                    identity.dropitems = identity.dropitems + 1
                    if identity.dropitems > #setting.storage.worldDrop.world then
                        infoid[world] = "["..identity.itemFloat(setting.itemId[1]).."] LIMIT !!!"
                        identity.botinfo("All drop storage has reached limit, Removing bot : [ ||"..getBot().name.."|| ] @everyone")
                        print("All drop storage has reached limit, Removing bot : [ "..getBot().name.." ]")
                        identity.webhookinfo()
                        if setting.mode.removeBot then
                            removeBot(getBot().name)
                            sleep(100)
                        end
                        error()
                    end
                    tileDrop = 0
                else
                    for y,pack in pairs(setting.itemId) do
                        for i,tile in pairs(getTiles()) do
                            if setting.mode.separated then
                                if tile.fg == 0 or tile.bg == 0 then
                                    ::BACK::
                                    findPath(dropX + (tileDrop),dropY - (y-1))
                                    sleep(1000)
                                    local count = 0
                                    identity.reconnect(world,identity.door,dropX + (tileDrop),dropY - (y-1))
                                    if dropX + (tileDrop) >= 98 then
                                        dropY = dropY - 1
                                        tileDrop = 0
                                    end
                                    while findItem(pack) > 0 do
                                        drop(pack)
                                        sleep(setting.delay.drop)
                                        identity.reconnect(world,identity.door,dropX + (tileDrop),dropY - (y-1))
                                        count = count + 1
                                        if count >= 2 then
                                            tileDrop = tileDrop + 1
                                            goto BACK
                                        end
                                    end
                                end
                            else
                                if tile.fg == 0 or tile.bg == 0 then
                                    ::BACK::
                                    findPath(dropX + (tileDrop),dropY)
                                    sleep(1000)
                                    local count = 0
                                    identity.reconnect(world,identity.door,dropX + (tileDrop),dropY)
                                    if dropX + (tileDrop) >= 98 then
                                        dropY = dropY - 1
                                        tileDrop = 0
                                    end
                                    while findItem(pack) > 0 do
                                        drop(pack)
                                        sleep(setting.delay.drop)
                                        identity.reconnect(world,identity.door,dropX + (tileDrop),dropY)
                                        count = count + 1
                                        if count >= 2 then
                                            tileDrop = tileDrop + 1
                                            goto BACK
                                        end
                                    end
                                end
                            end
                            if findItem(pack) == 0 then
                                break
                            end
                        end
                    end
                    sleep(100)
                    break
                end
            else
                infoid[world] = "WRONG DOOR !!!"
                wrong = false
                sleep(1000)
                print("[ "..world.." ] Id door drop storage is wrong, check ur id door!")
                identity.botinfo("[ ||"..world.."|| ] Id door drop storage is wrong, check ur id door! @everyone")
                identity.dropitems = identity.dropitems + 1
                if identity.dropitems > #setting.storage.worldDrop.world then
                    print("All drop storage has reached limit")
                    identity.botinfo("All drop storage has reached limit! Removing bot : [ ||"..getBot().name.."|| ] @everyone")
                    identity.webhookinfo()
                    if setting.mode.removeBot then
                        removeBot(getBot().name)
                        sleep(100)
                    end
                    error()
                end
                tileDrop = 0
            end
        else
            infoid[world] = "NUKED !!!"
            nuked = false
            sleep(1000)
            print("[ "..world.." ] drop Storage is NUKED, check ur storage!")
            identity.botinfo("[ "..world.." ] drop Storage is NUKED, check ur storage! @everyone")
            identity.dropitems = identity.dropitems + 1
            if identity.dropitems > #setting.storage.worldDrop.world then
                print("All drop storage has reached limit!")
                identity.botinfo("All drop storage has reached limit! Removing bot : [ ||"..getBot().name.."|| ] @everyone")
                identity.webhookinfo()
                if setting.mode.removeBot then
                    removeBot(getBot().name)
                    sleep(100)
                end
                error()
            end
            tileDrop = 0
        end
    end
    infoid[world] = "["..identity.itemFloat(setting.itemId[1]).."]"
end

identity.takestorage = function()
    for i = identity.takeitems, #setting.storage.worldTake.world do
        setJob("Taking items")
        world = setting.storage.worldTake.world[i]
        identity.door = setting.storage.worldTake.door
        identity.warp(world,identity.door)
        identity.webhookinfo()
        if not nuked then
            if not wrong then
                if identity.itemFloat(setting.itemId[1]) == 0 then
                    infoid[world] = "["..identity.itemFloat(setting.itemId[1]).."] EMPTY !!!"
                    identity.botinfo("Take storage : [ ||"..world.."|| ] has empty, skipped world @everyone")
                    print("Take storage : [ "..world.." ] has empty, skipped world")
                    identity.takeitems = identity.takeitems + 1
                    if identity.takeitems > #setting.storage.worldTake.world then
                        infoid[world] = "["..identity.itemFloat(setting.itemId[1]).."] EMPTY !!!"
                        identity.botinfo("All take storage has empty, Removing bot : [ ||"..getBot().name.."|| ] @everyone")
                        print("All take storage has empty, Removing bot : [ "..getBot().name.." ]")
                        identity.webhookinfo()
                        if setting.mode.removeBot then
                            removeBot(getBot().name)
                            sleep(100)
                        end
                        error()
                    end
                else
                    for _, pack in pairs(setting.itemId) do
                        while findItem(pack) == 0 do
                            for _, object in pairs(getObjects()) do
                                if object.id == pack then
                                    findPath(identity.round((object.x)/32), math.floor((object.y)/32))
                                    sleep(500)
                                    collect(setting.mode.range)
                                    identity.reconnect(world,identity.door,identity.round((object.x)/32), math.floor((object.y)/32))
                                end
                                if findItem(pack) > 0 then
                                    break
                                end
                            end
                        end
                    end
                    sleep(100)
                    break
                end
            else
                infoid[world] = "WRONG DOOR !!!"
                wrong = false
                sleep(1000)
                print("[ "..world.." ] Id door take storage is wrong, check ur id door!")
                identity.botinfo("[ ||"..world.."|| ] Id door take storage is wrong, check ur id door! @everyone")
                identity.takeitems = identity.takeitems + 1
                if identity.takeitems > #setting.storage.worldTake.world then
                    print("All take storage has empty")
                    identity.botinfo("All take storage has empty! Removing bot : [ ||"..getBot().name.."|| ] @everyone")
                    identity.webhookinfo()
                    if setting.mode.removeBot then
                        removeBot(getBot().name)
                        sleep(100)
                    end
                    error()
                end
            end
        else
            infoid[world] = "NUKED !!!"
            nuked = false
            sleep(1000)
            print("[ "..world.." ] take Storage is NUKED, check ur storage!")
            identity.botinfo("[ "..world.." ] take Storage is NUKED, check ur storage! @everyone")
            identity.takeitems = identity.takeitems + 1
            if identity.takeitems > #setting.storage.worldTake.world then
                print("All take storage has empty!")
                identity.botinfo("All drop storage has empty! Removing bot : [ ||"..getBot().name.."|| ] @everyone")
                identity.webhookinfo()
                if setting.mode.removeBot then
                    removeBot(getBot().name)
                    sleep(100)
                end
                error()
            end
        end
    end
    infoid[world] = "["..identity.itemFloat(setting.itemId[1]).."]"
end

identity.dropnpg = function()
    world = identity.splitt(setting.mode.worldnpg[index],"[^:]+")[1]
    identity.door = identity.splitt(setting.mode.worldnpg[index],"[^:]+")[2]
    identity.warp(world,identity.door)
    if not nuked then
        if not wrong then
            while findItem(6086) > 0 do
                drop(6086)
                sleep(setting.delay.drop)
            end
        else
            print("Id door world npg is wrong, check ur id door !!")
            identity.botinfo("Id door world npg is wrong, check ur id door !! @everyone")
            error()
        end
    else
        print("World npg is nuked, check ur world !!")
        identity.botinfo("World npg is nuked, check ur world !! @everyone")
        error()
    end
end

identity.npg = function()
    world = identity.splitt(setting.mode.worldnpg[index],"[^:]+")[1]
    identity.door = identity.splitt(setting.mode.worldnpg[index],"[^:]+")[2]
    setJob("Taking NPG")
    identity.warp(world,identity.door)
    if not nuked then
        if not wrong then
            while findItem(6086) == 0 do
                for _, obj in pairs(getObjects()) do
                    if obj.id == 6086 then
                        findPath(math.floor(obj.x / 32),math.floor(obj.y / 32))
                        sleep(1000)
                        collect(2)
                        sleep(1000)
                    end
                    if findItem(6086) > 0  then
                        break
                    end
                end
            end
            wear(6086)
            sleep(500)
            move(-1,0)
            sleep(1000)
            if findItem(6086) > 1 then
                drop(6086,findItem(6086) - 1)
                sleep(setting.delay.drop)
            end
        else
            print("Id door world npg is wrong, check ur id door !!")
            identity.botinfo("Id door world npg is wrong, check ur id door !! @everyone")
            error()
        end
    else
        print("World npg is nuked, check ur world !!")
        identity.botinfo("World npg is nuked, check ur world !! @everyone")
        error()
    end
end

identity.killing = function()
    for _, worlds in pairs(farmList) do
        identity.door = idList
        setJob("Killing ghost")
        identity.warp(worlds,identity.door)
        if not nuked then
            if not wrong then
                sleep(setting.delay.killghost)
            else
                wrong = false
                sleep(1000)
                print(""..worlds.." is wrong door id, skipped world")
                identity.botinfo("[ ||"..worlds.."|| ] is wrong door id, skipped world @everyone")
            end
        else
            nuked = false
            sleep(1000)
            print(""..worlds.." is NUKED!, check ur world !!")
            identity.botinfo("[ ||"..worlds.."|| ] is NUKED!, check ur world !! @everyone")
        end
    end
end

identity.take = function(threads)
    for _, obj in pairs(getObjects()) do
        if obj.id == setting.itemId[1] then
            if identity.itemFloat(obj.id) ~= 0 then
                findPath(math.floor(obj.x / 32),math.floor(obj.y / 32))
                collect(2)
                sleep(setting.delay.collect)
            end
            if findItem(obj.id) > 180 then
                identity.storingitems(threads)
                identity.door = identity.param
                setJob("Collect from farm")
                identity.warp(threads,identity.door)
                identity.webhookinfo()
            end
        end
    end
end

identity.writeFile = function(text)
    local file = io.open("WorldStatus.txt","a")
    file:write(text.."\n")
    file:close()
end

if BizzantiuM.version == "1.1" and BizzantiuM.handler == "akbarsht" then
    sleep(math.random(100,3000))
    identity.webhookinfo()
    if setting.mode.killghost then
        if findItem(6086) == 0 then
            identity.npg()
            identity.killing()
            identity.dropnpg()
        else
            identity.killing()
            identity.dropnpg()
        end
        print("All ghost are killed, please disable auto kill ghost then re-execute script")
        identity.botinfo("All ghost are killed, please disable auto kill ghost then re-execute script @everyone")
        error()
    end
    if setting.farmList.collectfromfarm then
        for idx, value in ipairs(worlds) do
            identity.door = identity.param
            setJob("Collect from farm")
            identity.warp(value,identity.door)
            identity.webhookinfo()
            if not nuked then
                if not wrong then
                    identity.take(value)
                else
                    identity.writeFile("[ "..value.." ] is wrong id")
                    wrong = false
                    sleep(1000)
                    print(""..value.." is wrong door id, skipped world")
                    identity.botinfo("[ ||"..value.."|| ] is wrong door id, skipped world @everyone")
                end
            else
                identity.writeFile("[ "..value.." ] is NUKED !!")
                nuked = false
                sleep(1000)
                print(""..value.." is NUKED!, check ur world !!")
                identity.botinfo("[ ||"..value.."|| ] is NUKED!, check ur world !! @everyone")
            end
        end
    else
        while true do
            identity.takestorage()
            identity.storingitems(threads)
        end
    end
end
